version: "3.7"
services:
  srv-alarm:
    build:
      context: src
      dockerfile: srv-alarm.Dockerfile
    container_name: srv-alarm
    networks:
      - sunrise-alarm
    ports:
      - "8000:8080"
    environment:
      - "TZ=Europe/Brussels"
      - "MQTT_BROKER_HOST=mosquitto"
      - "RUST_BACKTRACE=1"
      - "RUST_LOG=srv_alarm=debug,srv_alarm::mqtt=info,info"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.srv-alarm.entrypoints=web"
      - "traefik.http.routers.srv-alarm.rule=Path(`/alarms/next`)"
      - "traefik.http.routers.srv-alarm.priority=100"

  srv-config:
    build:
      context: src
      dockerfile: srv-config.Dockerfile
    container_name: srv-config
    networks:
      - sunrise-alarm
    ports:
      - "8001:8080"
    environment:
      - "TZ=Europe/Brussels"
      - "MQTT_BROKER_HOST=mosquitto"
      - "RUST_BACKTRACE=1"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.srv-config.entrypoints=web"
      - "traefik.http.routers.srv-config.rule=PathPrefix(`/alarms`)"

  srv-physical:
    build:
      context: src
      dockerfile: srv-physical.Dockerfile
    container_name: srv-physical
    networks:
      - sunrise-alarm
    ports:
      - "8002:8080"
    environment:
      - "TZ=Europe/Brussels"
      - "DEBUG=True"
      - "MOCK=True"
      - "MQTT_BROKER_HOST=mosquitto"
      - "MQTT_CLIENT_ID=srv-physical"

  srv-audio:
    build:
      context: src
      dockerfile: srv-audio.Dockerfile
    container_name: srv-audio
    volumes:
      - "/tmp/pa-sunrise-alarm.socket:/pulse/pulseaudio.socket"
    networks:
      - sunrise-alarm
    ports:
      - "8003:8080"
    environment:
      - "TZ=Europe/Brussels"
      - "MQTT_BROKER_HOST=mosquitto"
      - "RUST_BACKTRACE=1"

  api-watchface:
    image: traefik
    container_name: api-watchface
    networks:
      - sunrise-alarm
    ports:
      - "127.0.0.1:8004:8080"
      - "127.0.0.1:8084:8081"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8080"
      - "--entrypoints.web.http.middlewares=cors"
      - "--entrypoints.api.address=:8081"
      - "--api=true"
    environment:
      - "TZ=Europe/Brussels"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=api"
      - "traefik.http.routers.api.rule=PathPrefix(`/`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"

  gui-watchface:
    build:
      context: src
      dockerfile: gui-watchface.Dockerfile
    container_name: gui-watchface
    depends_on:
      - api-watchface
    networks:
      - sunrise-alarm
    ports:
      - "8080:8080"
    environment:
      - "TZ=Europe/Brussels"

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    networks:
      - sunrise-alarm
    ports:
      - "1883:1883"
      - "9001:9001"
    environment:
      - "TZ=Europe/Brussels"
    volumes:
      - "./src/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro"

networks:
  sunrise-alarm:
    name: sunrise-alarm
