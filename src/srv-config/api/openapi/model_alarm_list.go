/*
srv-config

Service to manage configuration

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AlarmList struct for AlarmList
type AlarmList struct {
	Alarms []Alarm `json:"alarms"`
}

// NewAlarmList instantiates a new AlarmList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlarmList(alarms []Alarm) *AlarmList {
	this := AlarmList{}
	this.Alarms = alarms
	return &this
}

// NewAlarmListWithDefaults instantiates a new AlarmList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlarmListWithDefaults() *AlarmList {
	this := AlarmList{}
	return &this
}

// GetAlarms returns the Alarms field value
func (o *AlarmList) GetAlarms() []Alarm {
	if o == nil {
		var ret []Alarm
		return ret
	}

	return o.Alarms
}

// GetAlarmsOk returns a tuple with the Alarms field value
// and a boolean to check if the value has been set.
func (o *AlarmList) GetAlarmsOk() ([]Alarm, bool) {
	if o == nil {
		return nil, false
	}
	return o.Alarms, true
}

// SetAlarms sets field value
func (o *AlarmList) SetAlarms(v []Alarm) {
	o.Alarms = v
}

func (o AlarmList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["alarms"] = o.Alarms
	}
	return json.Marshal(toSerialize)
}

type NullableAlarmList struct {
	value *AlarmList
	isSet bool
}

func (v NullableAlarmList) Get() *AlarmList {
	return v.value
}

func (v *NullableAlarmList) Set(val *AlarmList) {
	v.value = val
	v.isSet = true
}

func (v NullableAlarmList) IsSet() bool {
	return v.isSet
}

func (v *NullableAlarmList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlarmList(val *AlarmList) *NullableAlarmList {
	return &NullableAlarmList{value: val, isSet: true}
}

func (v NullableAlarmList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlarmList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


