// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	entities "github.com/JenswBE/sunrise-alarm/src/services/physical/entities"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// GetLEDState provides a mock function with given fields:
func (_m *Service) GetLEDState() entities.LEDState {
	ret := _m.Called()

	var r0 entities.LEDState
	if rf, ok := ret.Get(0).(func() entities.LEDState); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(entities.LEDState)
	}

	return r0
}

// LockBacklightBrightness provides a mock function with given fields:
func (_m *Service) LockBacklightBrightness() {
	_m.Called()
}

// ResetLEDState provides a mock function with given fields:
func (_m *Service) ResetLEDState() {
	_m.Called()
}

// SetLEDState provides a mock function with given fields: _a0
func (_m *Service) SetLEDState(_a0 entities.LEDState) {
	_m.Called(_a0)
}

// StartBuzzer provides a mock function with given fields:
func (_m *Service) StartBuzzer() {
	_m.Called()
}

// StartSunriseSimulation provides a mock function with given fields:
func (_m *Service) StartSunriseSimulation() {
	_m.Called()
}

// StopBuzzer provides a mock function with given fields:
func (_m *Service) StopBuzzer() {
	_m.Called()
}

// StopSunriseSimulation provides a mock function with given fields:
func (_m *Service) StopSunriseSimulation() {
	_m.Called()
}

// UnlockBacklightBrightness provides a mock function with given fields:
func (_m *Service) UnlockBacklightBrightness() {
	_m.Called()
}

// NewService creates a new instance of Service. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewService(t testing.TB) *Service {
	mock := &Service{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
