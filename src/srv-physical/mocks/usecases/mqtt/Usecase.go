// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/JenswBE/sunrise-alarm/src/srv-physical/entities"
	mock "github.com/stretchr/testify/mock"
)

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

// PublishButtonLongPressed provides a mock function with given fields: ctx
func (_m *Usecase) PublishButtonLongPressed(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PublishButtonPressed provides a mock function with given fields: ctx
func (_m *Usecase) PublishButtonPressed(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PublishTempHumidUpdated provides a mock function with given fields: ctx, e
func (_m *Usecase) PublishTempHumidUpdated(ctx context.Context, e entities.TempHumidReading) error {
	ret := _m.Called(ctx, e)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entities.TempHumidReading) error); ok {
		r0 = rf(ctx, e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
